{
  "name": "Django + Nuxt 实现美食分享网站",
  "description": "Django 作为 Python 社区最受欢迎的 Web 框架之一，凭借其高度抽象的组件和强大方便的脚手架，将快速且流畅的开发体验演绎到了极致。而 Nuxt 作为从 Vue.js 进化而来的前端框架，能够轻松胜任复杂的 SPA（单页应用）开发。两者相遇，能够擦出怎样的火花？这篇教程将用 Django + Nuxt 实现带有完整的增删改查（CRUD）功能的全栈应用。最后郑重警告：不要在深夜阅读此教程！！！",
  "id": "b9b4d831629e9a7df36131b1661569eb",
  "created": "2019-10-18T00:00:00.509Z",
  "topics": ["Django", "Vue", "Nuxt"],
  "categories": ["后端", "Python", "进阶"],
  "version": "v2",
  "articles": [
    {
      "name": "Django + Nuxt 实现美食分享网站（一）",
      "description": "Django 作为 Python 社区最受欢迎的 Web 框架之一，凭借其高度抽象的组件和强大方便的脚手架，将快速且流畅的开发体验演绎到了极致。而 Nuxt 作为从 Vue.js 进化而来的前端框架，能够轻松胜任复杂的 SPA（单页应用）开发。两者相遇，能够擦出怎样的火花？这篇教程将用 Django + Nuxt 实现带有完整的增删改查（CRUD）功能的全栈应用。最后郑重警告：不要在深夜阅读此教程！！！",
      "cover": ".tuture/assets/cover-1.jpg",
      "id": "0818be0",
      "steps": [
        {
          "id": "ls5qic7Y",
          "commit": "c64b3b6"
        },
        {
          "id": "a53j6F4Fmy",
          "commit": "d4d056f"
        },
        {
          "id": "AJziwEM6Mk",
          "commit": "596203d"
        },
        {
          "id": "ZYUYQTbmJz",
          "commit": "63f7ab0"
        }
      ]
    },
    {
      "name": "Django + Nuxt 实现美食分享网站（二）",
      "description": "在本教程的上一部分中，我们分别用 Django 和 Nuxt 实现了后端和前端的雏形。在这一部分，我们将实现前后端之间的通信，使得前端可以从后端获取数据，并且将进一步丰富网站的功能。",
      "cover": ".tuture/assets/cover-2.jpg",
      "id": "425a3a9",
      "steps": [
        {
          "id": "TS_VxEGaGC",
          "commit": "60a60d7"
        },
        {
          "id": "UrPiWOoIpE",
          "commit": "5f1edd9"
        },
        {
          "id": "CJ_LghWO99",
          "commit": "04edf4c"
        }
      ]
    }
  ],
  "unassignedSteps": []
}
